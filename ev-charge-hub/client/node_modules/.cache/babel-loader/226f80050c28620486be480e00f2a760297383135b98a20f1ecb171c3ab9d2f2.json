{"ast":null,"code":"// src/services/bookingService.js - Service for booking API calls\nimport api from '../utils/api';\n\n// Fetch bookings with pagination\nexport const fetchBookings = async (page = 1, limit = 10, filters = {}) => {\n  try {\n    // Build query string from filters\n    const queryParams = new URLSearchParams({\n      page,\n      limit,\n      ...filters\n    }).toString();\n    const response = await api.get(`/bookings?${queryParams}`);\n    return response.data;\n  } catch (error) {\n    var _error$response, _error$response2, _error$response2$data, _error$response3, _error$response3$data;\n    // Throw a user-friendly error\n    if (((_error$response = error.response) === null || _error$response === void 0 ? void 0 : _error$response.status) === 401 && !((_error$response2 = error.response) !== null && _error$response2 !== void 0 && (_error$response2$data = _error$response2.data) !== null && _error$response2$data !== void 0 && _error$response2$data.expired)) {\n      throw new Error('You are not authorized to view bookings');\n    } else if ((_error$response3 = error.response) !== null && _error$response3 !== void 0 && (_error$response3$data = _error$response3.data) !== null && _error$response3$data !== void 0 && _error$response3$data.expired) {\n      // This should be handled by the interceptor, but just in case\n      throw new Error('Session expired. Refreshing...');\n    } else {\n      throw new Error('Failed to fetch bookings. Please try again.');\n    }\n  }\n};\n\n// Get booking by ID\nexport const getBookingById = async id => {\n  try {\n    const response = await api.get(`/bookings/${id}`);\n    return response.data;\n  } catch (error) {\n    throw new Error('Failed to fetch booking details');\n  }\n};\n\n// Create new booking\nexport const createBooking = async bookingData => {\n  try {\n    const response = await api.post('/bookings', bookingData);\n    return response.data;\n  } catch (error) {\n    throw new Error('Failed to create booking');\n  }\n};\n\n// Update booking\nexport const updateBooking = async (id, bookingData) => {\n  try {\n    const response = await api.put(`/bookings/${id}`, bookingData);\n    return response.data;\n  } catch (error) {\n    throw new Error('Failed to update booking');\n  }\n};\n\n// Delete booking\nexport const deleteBooking = async id => {\n  try {\n    const response = await api.delete(`/bookings/${id}`);\n    return response.data;\n  } catch (error) {\n    throw new Error('Failed to delete booking');\n  }\n};","map":{"version":3,"names":["api","fetchBookings","page","limit","filters","queryParams","URLSearchParams","toString","response","get","data","error","_error$response","_error$response2","_error$response2$data","_error$response3","_error$response3$data","status","expired","Error","getBookingById","id","createBooking","bookingData","post","updateBooking","put","deleteBooking","delete"],"sources":["D:/UnifiedMentor/electric-charger-hub/ev-charge-hub/client/src/services/BookingService.js"],"sourcesContent":["// src/services/bookingService.js - Service for booking API calls\r\nimport api from '../utils/api';\r\n\r\n// Fetch bookings with pagination\r\nexport const fetchBookings = async (page = 1, limit = 10, filters = {}) => {\r\n  try {\r\n    // Build query string from filters\r\n    const queryParams = new URLSearchParams({\r\n      page,\r\n      limit,\r\n      ...filters\r\n    }).toString();\r\n    \r\n    const response = await api.get(`/bookings?${queryParams}`);\r\n    return response.data;\r\n  } catch (error) {\r\n    // Throw a user-friendly error\r\n    if (error.response?.status === 401 && !error.response?.data?.expired) {\r\n      throw new Error('You are not authorized to view bookings');\r\n    } else if (error.response?.data?.expired) {\r\n      // This should be handled by the interceptor, but just in case\r\n      throw new Error('Session expired. Refreshing...');\r\n    } else {\r\n      throw new Error('Failed to fetch bookings. Please try again.');\r\n    }\r\n  }\r\n};\r\n\r\n// Get booking by ID\r\nexport const getBookingById = async (id) => {\r\n  try {\r\n    const response = await api.get(`/bookings/${id}`);\r\n    return response.data;\r\n  } catch (error) {\r\n    throw new Error('Failed to fetch booking details');\r\n  }\r\n};\r\n\r\n// Create new booking\r\nexport const createBooking = async (bookingData) => {\r\n  try {\r\n    const response = await api.post('/bookings', bookingData);\r\n    return response.data;\r\n  } catch (error) {\r\n    throw new Error('Failed to create booking');\r\n  }\r\n};\r\n\r\n// Update booking\r\nexport const updateBooking = async (id, bookingData) => {\r\n  try {\r\n    const response = await api.put(`/bookings/${id}`, bookingData);\r\n    return response.data;\r\n  } catch (error) {\r\n    throw new Error('Failed to update booking');\r\n  }\r\n};\r\n\r\n// Delete booking\r\nexport const deleteBooking = async (id) => {\r\n  try {\r\n    const response = await api.delete(`/bookings/${id}`);\r\n    return response.data;\r\n  } catch (error) {\r\n    throw new Error('Failed to delete booking');\r\n  }\r\n};"],"mappings":"AAAA;AACA,OAAOA,GAAG,MAAM,cAAc;;AAE9B;AACA,OAAO,MAAMC,aAAa,GAAG,MAAAA,CAAOC,IAAI,GAAG,CAAC,EAAEC,KAAK,GAAG,EAAE,EAAEC,OAAO,GAAG,CAAC,CAAC,KAAK;EACzE,IAAI;IACF;IACA,MAAMC,WAAW,GAAG,IAAIC,eAAe,CAAC;MACtCJ,IAAI;MACJC,KAAK;MACL,GAAGC;IACL,CAAC,CAAC,CAACG,QAAQ,CAAC,CAAC;IAEb,MAAMC,QAAQ,GAAG,MAAMR,GAAG,CAACS,GAAG,CAAC,aAAaJ,WAAW,EAAE,CAAC;IAC1D,OAAOG,QAAQ,CAACE,IAAI;EACtB,CAAC,CAAC,OAAOC,KAAK,EAAE;IAAA,IAAAC,eAAA,EAAAC,gBAAA,EAAAC,qBAAA,EAAAC,gBAAA,EAAAC,qBAAA;IACd;IACA,IAAI,EAAAJ,eAAA,GAAAD,KAAK,CAACH,QAAQ,cAAAI,eAAA,uBAAdA,eAAA,CAAgBK,MAAM,MAAK,GAAG,IAAI,GAAAJ,gBAAA,GAACF,KAAK,CAACH,QAAQ,cAAAK,gBAAA,gBAAAC,qBAAA,GAAdD,gBAAA,CAAgBH,IAAI,cAAAI,qBAAA,eAApBA,qBAAA,CAAsBI,OAAO,GAAE;MACpE,MAAM,IAAIC,KAAK,CAAC,yCAAyC,CAAC;IAC5D,CAAC,MAAM,KAAAJ,gBAAA,GAAIJ,KAAK,CAACH,QAAQ,cAAAO,gBAAA,gBAAAC,qBAAA,GAAdD,gBAAA,CAAgBL,IAAI,cAAAM,qBAAA,eAApBA,qBAAA,CAAsBE,OAAO,EAAE;MACxC;MACA,MAAM,IAAIC,KAAK,CAAC,gCAAgC,CAAC;IACnD,CAAC,MAAM;MACL,MAAM,IAAIA,KAAK,CAAC,6CAA6C,CAAC;IAChE;EACF;AACF,CAAC;;AAED;AACA,OAAO,MAAMC,cAAc,GAAG,MAAOC,EAAE,IAAK;EAC1C,IAAI;IACF,MAAMb,QAAQ,GAAG,MAAMR,GAAG,CAACS,GAAG,CAAC,aAAaY,EAAE,EAAE,CAAC;IACjD,OAAOb,QAAQ,CAACE,IAAI;EACtB,CAAC,CAAC,OAAOC,KAAK,EAAE;IACd,MAAM,IAAIQ,KAAK,CAAC,iCAAiC,CAAC;EACpD;AACF,CAAC;;AAED;AACA,OAAO,MAAMG,aAAa,GAAG,MAAOC,WAAW,IAAK;EAClD,IAAI;IACF,MAAMf,QAAQ,GAAG,MAAMR,GAAG,CAACwB,IAAI,CAAC,WAAW,EAAED,WAAW,CAAC;IACzD,OAAOf,QAAQ,CAACE,IAAI;EACtB,CAAC,CAAC,OAAOC,KAAK,EAAE;IACd,MAAM,IAAIQ,KAAK,CAAC,0BAA0B,CAAC;EAC7C;AACF,CAAC;;AAED;AACA,OAAO,MAAMM,aAAa,GAAG,MAAAA,CAAOJ,EAAE,EAAEE,WAAW,KAAK;EACtD,IAAI;IACF,MAAMf,QAAQ,GAAG,MAAMR,GAAG,CAAC0B,GAAG,CAAC,aAAaL,EAAE,EAAE,EAAEE,WAAW,CAAC;IAC9D,OAAOf,QAAQ,CAACE,IAAI;EACtB,CAAC,CAAC,OAAOC,KAAK,EAAE;IACd,MAAM,IAAIQ,KAAK,CAAC,0BAA0B,CAAC;EAC7C;AACF,CAAC;;AAED;AACA,OAAO,MAAMQ,aAAa,GAAG,MAAON,EAAE,IAAK;EACzC,IAAI;IACF,MAAMb,QAAQ,GAAG,MAAMR,GAAG,CAAC4B,MAAM,CAAC,aAAaP,EAAE,EAAE,CAAC;IACpD,OAAOb,QAAQ,CAACE,IAAI;EACtB,CAAC,CAAC,OAAOC,KAAK,EAAE;IACd,MAAM,IAAIQ,KAAK,CAAC,0BAA0B,CAAC;EAC7C;AACF,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}