{"ast":null,"code":"var _jsxFileName = \"D:\\\\UnifiedMentor\\\\electric-charger-hub\\\\ev-charge-hub\\\\client\\\\src\\\\components\\\\user\\\\BookSlot.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport { Clock, MapPin, Calendar, Zap, CheckCircle, AlertCircle } from \"lucide-react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst BookingForm = () => {\n  _s();\n  const [bunks, setBunks] = useState([]);\n  const [selectedBunk, setSelectedBunk] = useState(\"\");\n  const [selectedDate, setSelectedDate] = useState(\"\");\n  const [availableSlots, setAvailableSlots] = useState([]);\n  const [selectedSlot, setSelectedSlot] = useState(\"\");\n  const [loading, setLoading] = useState(false);\n  const [message, setMessage] = useState({\n    text: \"\",\n    type: \"\"\n  });\n  const [selectedBunkDetails, setSelectedBunkDetails] = useState(null);\n\n  // Fetch all bunks on component mount\n  useEffect(() => {\n    const fetchBunks = async () => {\n      try {\n        const res = await axios.get(\"/api/bunks\");\n        setBunks(res.data);\n      } catch (err) {\n        console.error(\"Error fetching bunks:\", err);\n        setMessage({\n          text: \"Failed to load EV bunks\",\n          type: \"error\"\n        });\n      }\n    };\n    fetchBunks();\n  }, []);\n\n  // Update selected bunk details when bunk changes\n  useEffect(() => {\n    if (selectedBunk) {\n      const bunkDetails = bunks.find(bunk => bunk._id === selectedBunk);\n      setSelectedBunkDetails(bunkDetails);\n    } else {\n      setSelectedBunkDetails(null);\n    }\n  }, [selectedBunk, bunks]);\n\n  // Fetch available slots when bunk or date changes\n  useEffect(() => {\n    const fetchAvailableSlots = async () => {\n      if (!selectedBunk || !selectedDate) return;\n      setLoading(true);\n      try {\n        const res = await axios.get(`/api/bookings/available-slots/${selectedBunk}/${selectedDate}`);\n        // Fix: Access the availableSlots from the correct path in the response\n        setAvailableSlots(res.data.data.availableSlots || []);\n        setSelectedSlot(\"\"); // Reset selected slot\n      } catch (err) {\n        console.error(\"Error fetching available slots:\", err);\n        setMessage({\n          text: \"Failed to load available slots\",\n          type: \"error\"\n        });\n      } finally {\n        setLoading(false);\n      }\n    };\n    fetchAvailableSlots();\n  }, [selectedBunk, selectedDate]);\n  const handleSubmit = async e => {\n    e.preventDefault();\n    if (!selectedBunk || !selectedSlot) {\n      setMessage({\n        text: \"Please select a bunk and time slot\",\n        type: \"error\"\n      });\n      return;\n    }\n    setLoading(true);\n    try {\n      // First check if slot is still available\n      const checkRes = await axios.post(\"/api/bookings/check-availability\", {\n        bunkId: selectedBunk,\n        slotTime: selectedSlot\n      });\n      if (!checkRes.data.data.available) {\n        setMessage({\n          text: \"Sorry, this slot was just booked. Please select another.\",\n          type: \"error\"\n        });\n        return;\n      }\n\n      // If available, create the booking\n      await axios.post(\"/api/bookings/create\", {\n        bunkId: selectedBunk,\n        slotTime: selectedSlot\n      }, {\n        headers: {\n          Authorization: `Bearer ${localStorage.getItem(\"token\")}`\n        }\n      });\n      setMessage({\n        text: \"Slot booked successfully!\",\n        type: \"success\"\n      });\n\n      // Reset form\n      setSelectedSlot(\"\");\n\n      // Refresh available slots\n      const res = await axios.get(`/api/bookings/available-slots/${selectedBunk}/${selectedDate}`);\n      setAvailableSlots(res.data.data.availableSlots || []);\n    } catch (err) {\n      var _err$response;\n      console.error(\"Booking error:\", err);\n      if (((_err$response = err.response) === null || _err$response === void 0 ? void 0 : _err$response.status) === 401) {\n        setMessage({\n          text: \"Please log in to book a slot\",\n          type: \"error\"\n        });\n      } else {\n        var _err$response2, _err$response2$data;\n        setMessage({\n          text: ((_err$response2 = err.response) === null || _err$response2 === void 0 ? void 0 : (_err$response2$data = _err$response2.data) === null || _err$response2$data === void 0 ? void 0 : _err$response2$data.message) || \"Booking failed\",\n          type: \"error\"\n        });\n      }\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  // Enhanced time formatting function that handles different slot formats\n  const formatTimeSlot = slotData => {\n    if (!slotData) return \"\";\n\n    // If slotData is a string that looks like an ISO date\n    if (typeof slotData === 'string' && slotData.includes('T')) {\n      const date = new Date(slotData);\n      const startHour = date.getHours();\n      const startMinute = date.getMinutes();\n      const endHour = startHour + 1; // Assuming 1-hour slots\n\n      return `${formatTime(startHour, startMinute)} - ${formatTime(endHour, startMinute)}`;\n    }\n\n    // If slotData is an object with start and end times\n    if (typeof slotData === 'object' && slotData.startTime && slotData.endTime) {\n      return `${formatTimeFromString(slotData.startTime)} - ${formatTimeFromString(slotData.endTime)}`;\n    }\n\n    // If slotData is just a time string like \"14:30\"\n    if (typeof slotData === 'string' && slotData.includes(':')) {\n      const [hours, minutes] = slotData.split(':');\n      const startHour = parseInt(hours, 10);\n      const startMinute = parseInt(minutes, 10);\n      const endHour = startHour + 1;\n      return `${formatTime(startHour, startMinute)} - ${formatTime(endHour, startMinute)}`;\n    }\n\n    // If it's a number (hour)\n    if (typeof slotData === 'number') {\n      return `${formatTime(slotData, 0)} - ${formatTime(slotData + 1, 0)}`;\n    }\n    return slotData.toString();\n  };\n\n  // Helper function to format time\n  const formatTime = (hours, minutes = 0) => {\n    const ampm = hours >= 12 ? 'PM' : 'AM';\n    const displayHour = hours % 12 || 12;\n    const displayMinute = minutes.toString().padStart(2, '0');\n    return `${displayHour}:${displayMinute} ${ampm}`;\n  };\n\n  // Helper function to format time from string\n  const formatTimeFromString = timeString => {\n    if (!timeString) return \"\";\n\n    // Handle full ISO string\n    if (timeString.includes('T')) {\n      const date = new Date(timeString);\n      return formatTime(date.getHours(), date.getMinutes());\n    }\n\n    // Handle time string like \"14:30\"\n    const [hours, minutes] = timeString.split(':');\n    return formatTime(parseInt(hours, 10), parseInt(minutes, 10));\n  };\n\n  // Get today's date in YYYY-MM-DD format\n  const getTodayDate = () => {\n    return new Date().toISOString().split('T')[0];\n  };\n\n  // Get max date (30 days from now)\n  const getMaxDate = () => {\n    const maxDate = new Date();\n    maxDate.setDate(maxDate.getDate() + 30);\n    return maxDate.toISOString().split('T')[0];\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"min-h-screen bg-gradient-to-br from-blue-50 via-indigo-50 to-purple-50 py-8 px-4\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"max-w-2xl mx-auto\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"text-center mb-8\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"w-16 h-16 bg-gradient-to-br from-blue-500 to-indigo-600 rounded-2xl flex items-center justify-center mx-auto mb-4\",\n          children: /*#__PURE__*/_jsxDEV(Zap, {\n            className: \"h-8 w-8 text-white\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 191,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 190,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n          className: \"text-3xl font-bold bg-gradient-to-r from-gray-900 to-gray-700 bg-clip-text text-transparent mb-2\",\n          children: \"Book Your EV Charging Slot\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 193,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"text-gray-600\",\n          children: \"Reserve your preferred charging time slot\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 196,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 189,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"bg-white rounded-2xl shadow-xl border border-gray-100 overflow-hidden\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"p-8\",\n          children: /*#__PURE__*/_jsxDEV(\"form\", {\n            onSubmit: handleSubmit,\n            className: \"space-y-6\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                htmlFor: \"bunk\",\n                className: \"flex items-center text-sm font-semibold text-gray-700 mb-3\",\n                children: [/*#__PURE__*/_jsxDEV(MapPin, {\n                  className: \"h-4 w-4 mr-2 text-blue-500\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 206,\n                  columnNumber: 19\n                }, this), \"Select Charging Station\"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 205,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n                id: \"bunk\",\n                value: selectedBunk,\n                onChange: e => setSelectedBunk(e.target.value),\n                className: \"w-full p-4 border border-gray-200 rounded-xl focus:ring-2 focus:ring-blue-500 focus:border-transparent transition-all duration-200 bg-gray-50 hover:bg-white\",\n                required: true,\n                children: [/*#__PURE__*/_jsxDEV(\"option\", {\n                  value: \"\",\n                  children: \"Choose a charging station\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 216,\n                  columnNumber: 19\n                }, this), bunks.map(bunk => /*#__PURE__*/_jsxDEV(\"option\", {\n                  value: bunk._id,\n                  children: [bunk.name, \" - \", bunk.address || bunk.location]\n                }, bunk._id, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 218,\n                  columnNumber: 21\n                }, this))]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 209,\n                columnNumber: 17\n              }, this), selectedBunkDetails && /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"mt-3 p-4 bg-blue-50 rounded-lg border border-blue-100\",\n                children: /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"flex items-center justify-between text-sm\",\n                  children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"flex items-center text-gray-600\",\n                    children: [/*#__PURE__*/_jsxDEV(Clock, {\n                      className: \"h-4 w-4 mr-2\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 229,\n                      columnNumber: 25\n                    }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                      children: [\"Operating Hours: \", selectedBunkDetails.operatingHours || '9:00 AM - 9:00 PM']\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 230,\n                      columnNumber: 25\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 228,\n                    columnNumber: 23\n                  }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"flex items-center text-green-600 font-medium\",\n                    children: /*#__PURE__*/_jsxDEV(\"span\", {\n                      children: [selectedBunkDetails.slotsAvailable || 0, \" slots available\"]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 233,\n                      columnNumber: 25\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 232,\n                    columnNumber: 23\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 227,\n                  columnNumber: 21\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 226,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 204,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                htmlFor: \"date\",\n                className: \"flex items-center text-sm font-semibold text-gray-700 mb-3\",\n                children: [/*#__PURE__*/_jsxDEV(Calendar, {\n                  className: \"h-4 w-4 mr-2 text-blue-500\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 243,\n                  columnNumber: 19\n                }, this), \"Select Date\"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 242,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                id: \"date\",\n                type: \"date\",\n                value: selectedDate,\n                onChange: e => setSelectedDate(e.target.value),\n                className: \"w-full p-4 border border-gray-200 rounded-xl focus:ring-2 focus:ring-blue-500 focus:border-transparent transition-all duration-200 bg-gray-50 hover:bg-white\",\n                min: getTodayDate(),\n                max: getMaxDate(),\n                required: true\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 246,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 241,\n              columnNumber: 15\n            }, this), selectedBunk && selectedDate && /*#__PURE__*/_jsxDEV(\"div\", {\n              children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                className: \"flex items-center text-sm font-semibold text-gray-700 mb-3\",\n                children: [/*#__PURE__*/_jsxDEV(Clock, {\n                  className: \"h-4 w-4 mr-2 text-blue-500\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 262,\n                  columnNumber: 21\n                }, this), \"Select Time Slot\"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 261,\n                columnNumber: 19\n              }, this), loading ? /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"text-center py-12\",\n                children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"animate-spin rounded-full h-8 w-8 border-b-2 border-blue-600 mx-auto mb-4\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 268,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                  className: \"text-gray-600\",\n                  children: \"Loading available slots...\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 269,\n                  columnNumber: 23\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 267,\n                columnNumber: 21\n              }, this) : availableSlots.length > 0 ? /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"grid grid-cols-1 sm:grid-cols-2 gap-3\",\n                children: availableSlots.map((slot, index) => /*#__PURE__*/_jsxDEV(\"button\", {\n                  type: \"button\",\n                  onClick: () => setSelectedSlot(slot),\n                  className: `p-4 text-sm font-medium rounded-xl border-2 transition-all duration-200 ${selectedSlot === slot ? 'bg-gradient-to-r from-green-500 to-emerald-500 text-white border-green-500 shadow-lg transform scale-105' : 'bg-white text-gray-700 border-gray-200 hover:bg-gray-50 hover:border-gray-300'}`,\n                  children: /*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"flex items-center justify-center\",\n                    children: [/*#__PURE__*/_jsxDEV(Clock, {\n                      className: \"h-4 w-4 mr-2\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 285,\n                      columnNumber: 29\n                    }, this), formatTimeSlot(slot)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 284,\n                    columnNumber: 27\n                  }, this)\n                }, `${slot}-${index}`, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 274,\n                  columnNumber: 25\n                }, this))\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 272,\n                columnNumber: 21\n              }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"text-center py-12 bg-gray-50 rounded-xl\",\n                children: [/*#__PURE__*/_jsxDEV(AlertCircle, {\n                  className: \"h-12 w-12 text-gray-400 mx-auto mb-4\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 293,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n                  className: \"text-lg font-medium text-gray-900 mb-2\",\n                  children: \"No Available Slots\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 294,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                  className: \"text-gray-500\",\n                  children: \"No charging slots available for this date. Please try another date.\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 295,\n                  columnNumber: 23\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 292,\n                columnNumber: 21\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 260,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              type: \"submit\",\n              disabled: loading || !selectedSlot,\n              className: `w-full py-4 rounded-xl text-white font-semibold transition-all duration-200 ${loading || !selectedSlot ? 'bg-gray-400 cursor-not-allowed' : 'bg-gradient-to-r from-blue-600 to-indigo-600 hover:from-blue-700 hover:to-indigo-700 shadow-lg hover:shadow-xl transform hover:-translate-y-0.5'}`,\n              children: loading ? /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"flex items-center justify-center\",\n                children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"animate-spin rounded-full h-5 w-5 border-b-2 border-white mr-2\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 313,\n                  columnNumber: 21\n                }, this), \"Processing...\"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 312,\n                columnNumber: 19\n              }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"flex items-center justify-center\",\n                children: [/*#__PURE__*/_jsxDEV(CheckCircle, {\n                  className: \"h-5 w-5 mr-2\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 318,\n                  columnNumber: 21\n                }, this), \"Book Charging Slot\"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 317,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 302,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 202,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 201,\n          columnNumber: 11\n        }, this), message.text && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: `px-8 py-4 border-t ${message.type === 'success' ? 'bg-green-50 border-green-100' : 'bg-red-50 border-red-100'}`,\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: `flex items-center ${message.type === 'success' ? 'text-green-800' : 'text-red-800'}`,\n            children: [message.type === 'success' ? /*#__PURE__*/_jsxDEV(CheckCircle, {\n              className: \"h-5 w-5 mr-2\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 337,\n              columnNumber: 19\n            }, this) : /*#__PURE__*/_jsxDEV(AlertCircle, {\n              className: \"h-5 w-5 mr-2\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 339,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"font-medium\",\n              children: message.text\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 341,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 333,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 328,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 200,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"mt-6 bg-blue-50 rounded-xl p-6 border border-blue-100\",\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          className: \"font-semibold text-blue-900 mb-2\",\n          children: \"Booking Information\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 349,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n          className: \"text-sm text-blue-800 space-y-1\",\n          children: [/*#__PURE__*/_jsxDEV(\"li\", {\n            children: \"\\u2022 Each slot is typically 1 hour duration\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 351,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n            children: \"\\u2022 Slots are shown in your local time\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 352,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n            children: \"\\u2022 You can book up to 30 days in advance\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 353,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n            children: \"\\u2022 Please arrive on time for your booking\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 354,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 350,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 348,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 187,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 186,\n    columnNumber: 5\n  }, this);\n};\n_s(BookingForm, \"hTX7gS7ky1RQ4lHrpDBuYH/1hF4=\");\n_c = BookingForm;\nexport default BookingForm;\nvar _c;\n$RefreshReg$(_c, \"BookingForm\");","map":{"version":3,"names":["React","useState","useEffect","axios","Clock","MapPin","Calendar","Zap","CheckCircle","AlertCircle","jsxDEV","_jsxDEV","BookingForm","_s","bunks","setBunks","selectedBunk","setSelectedBunk","selectedDate","setSelectedDate","availableSlots","setAvailableSlots","selectedSlot","setSelectedSlot","loading","setLoading","message","setMessage","text","type","selectedBunkDetails","setSelectedBunkDetails","fetchBunks","res","get","data","err","console","error","bunkDetails","find","bunk","_id","fetchAvailableSlots","handleSubmit","e","preventDefault","checkRes","post","bunkId","slotTime","available","headers","Authorization","localStorage","getItem","_err$response","response","status","_err$response2","_err$response2$data","formatTimeSlot","slotData","includes","date","Date","startHour","getHours","startMinute","getMinutes","endHour","formatTime","startTime","endTime","formatTimeFromString","hours","minutes","split","parseInt","toString","ampm","displayHour","displayMinute","padStart","timeString","getTodayDate","toISOString","getMaxDate","maxDate","setDate","getDate","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","htmlFor","id","value","onChange","target","required","map","name","address","location","operatingHours","slotsAvailable","min","max","length","slot","index","onClick","disabled","_c","$RefreshReg$"],"sources":["D:/UnifiedMentor/electric-charger-hub/ev-charge-hub/client/src/components/user/BookSlot.jsx"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport axios from \"axios\";\r\nimport { Clock, MapPin, Calendar, Zap, CheckCircle, AlertCircle } from \"lucide-react\";\r\n\r\nconst BookingForm = () => {\r\n  const [bunks, setBunks] = useState([]);\r\n  const [selectedBunk, setSelectedBunk] = useState(\"\");\r\n  const [selectedDate, setSelectedDate] = useState(\"\");\r\n  const [availableSlots, setAvailableSlots] = useState([]);\r\n  const [selectedSlot, setSelectedSlot] = useState(\"\");\r\n  const [loading, setLoading] = useState(false);\r\n  const [message, setMessage] = useState({ text: \"\", type: \"\" });\r\n  const [selectedBunkDetails, setSelectedBunkDetails] = useState(null);\r\n\r\n  // Fetch all bunks on component mount\r\n  useEffect(() => {\r\n    const fetchBunks = async () => {\r\n      try {\r\n        const res = await axios.get(\"/api/bunks\");\r\n        setBunks(res.data);\r\n      } catch (err) {\r\n        console.error(\"Error fetching bunks:\", err);\r\n        setMessage({ text: \"Failed to load EV bunks\", type: \"error\" });\r\n      }\r\n    };\r\n    \r\n    fetchBunks();\r\n  }, []);\r\n\r\n  // Update selected bunk details when bunk changes\r\n  useEffect(() => {\r\n    if (selectedBunk) {\r\n      const bunkDetails = bunks.find(bunk => bunk._id === selectedBunk);\r\n      setSelectedBunkDetails(bunkDetails);\r\n    } else {\r\n      setSelectedBunkDetails(null);\r\n    }\r\n  }, [selectedBunk, bunks]);\r\n\r\n  // Fetch available slots when bunk or date changes\r\n  useEffect(() => {\r\n    const fetchAvailableSlots = async () => {\r\n      if (!selectedBunk || !selectedDate) return;\r\n      \r\n      setLoading(true);\r\n      try {\r\n        const res = await axios.get(`/api/bookings/available-slots/${selectedBunk}/${selectedDate}`);\r\n        // Fix: Access the availableSlots from the correct path in the response\r\n        setAvailableSlots(res.data.data.availableSlots || []);\r\n        setSelectedSlot(\"\"); // Reset selected slot\r\n      } catch (err) {\r\n        console.error(\"Error fetching available slots:\", err);\r\n        setMessage({ text: \"Failed to load available slots\", type: \"error\" });\r\n      } finally {\r\n        setLoading(false);\r\n      }\r\n    };\r\n    \r\n    fetchAvailableSlots();\r\n  }, [selectedBunk, selectedDate]);\r\n\r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault();\r\n    \r\n    if (!selectedBunk || !selectedSlot) {\r\n      setMessage({ text: \"Please select a bunk and time slot\", type: \"error\" });\r\n      return;\r\n    }\r\n    \r\n    setLoading(true);\r\n    try {\r\n      // First check if slot is still available\r\n      const checkRes = await axios.post(\"/api/bookings/check-availability\", {\r\n        bunkId: selectedBunk,\r\n        slotTime: selectedSlot\r\n      });\r\n      \r\n      if (!checkRes.data.data.available) {\r\n        setMessage({ text: \"Sorry, this slot was just booked. Please select another.\", type: \"error\" });\r\n        return;\r\n      }\r\n      \r\n      // If available, create the booking\r\n      await axios.post(\"/api/bookings/create\", {\r\n        bunkId: selectedBunk,\r\n        slotTime: selectedSlot\r\n      }, {\r\n        headers: { Authorization: `Bearer ${localStorage.getItem(\"token\")}` }\r\n      });\r\n      \r\n      setMessage({ text: \"Slot booked successfully!\", type: \"success\" });\r\n      \r\n      // Reset form\r\n      setSelectedSlot(\"\");\r\n      \r\n      // Refresh available slots\r\n      const res = await axios.get(`/api/bookings/available-slots/${selectedBunk}/${selectedDate}`);\r\n      setAvailableSlots(res.data.data.availableSlots || []);\r\n      \r\n    } catch (err) {\r\n      console.error(\"Booking error:\", err);\r\n      \r\n      if (err.response?.status === 401) {\r\n        setMessage({ text: \"Please log in to book a slot\", type: \"error\" });\r\n      } else {\r\n        setMessage({ text: err.response?.data?.message || \"Booking failed\", type: \"error\" });\r\n      }\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  // Enhanced time formatting function that handles different slot formats\r\n  const formatTimeSlot = (slotData) => {\r\n    if (!slotData) return \"\";\r\n\r\n    // If slotData is a string that looks like an ISO date\r\n    if (typeof slotData === 'string' && slotData.includes('T')) {\r\n      const date = new Date(slotData);\r\n      const startHour = date.getHours();\r\n      const startMinute = date.getMinutes();\r\n      const endHour = startHour + 1; // Assuming 1-hour slots\r\n      \r\n      return `${formatTime(startHour, startMinute)} - ${formatTime(endHour, startMinute)}`;\r\n    }\r\n    \r\n    // If slotData is an object with start and end times\r\n    if (typeof slotData === 'object' && slotData.startTime && slotData.endTime) {\r\n      return `${formatTimeFromString(slotData.startTime)} - ${formatTimeFromString(slotData.endTime)}`;\r\n    }\r\n    \r\n    // If slotData is just a time string like \"14:30\"\r\n    if (typeof slotData === 'string' && slotData.includes(':')) {\r\n      const [hours, minutes] = slotData.split(':');\r\n      const startHour = parseInt(hours, 10);\r\n      const startMinute = parseInt(minutes, 10);\r\n      const endHour = startHour + 1;\r\n      \r\n      return `${formatTime(startHour, startMinute)} - ${formatTime(endHour, startMinute)}`;\r\n    }\r\n    \r\n    // If it's a number (hour)\r\n    if (typeof slotData === 'number') {\r\n      return `${formatTime(slotData, 0)} - ${formatTime(slotData + 1, 0)}`;\r\n    }\r\n    \r\n    return slotData.toString();\r\n  };\r\n\r\n  // Helper function to format time\r\n  const formatTime = (hours, minutes = 0) => {\r\n    const ampm = hours >= 12 ? 'PM' : 'AM';\r\n    const displayHour = hours % 12 || 12;\r\n    const displayMinute = minutes.toString().padStart(2, '0');\r\n    return `${displayHour}:${displayMinute} ${ampm}`;\r\n  };\r\n\r\n  // Helper function to format time from string\r\n  const formatTimeFromString = (timeString) => {\r\n    if (!timeString) return \"\";\r\n    \r\n    // Handle full ISO string\r\n    if (timeString.includes('T')) {\r\n      const date = new Date(timeString);\r\n      return formatTime(date.getHours(), date.getMinutes());\r\n    }\r\n    \r\n    // Handle time string like \"14:30\"\r\n    const [hours, minutes] = timeString.split(':');\r\n    return formatTime(parseInt(hours, 10), parseInt(minutes, 10));\r\n  };\r\n\r\n  // Get today's date in YYYY-MM-DD format\r\n  const getTodayDate = () => {\r\n    return new Date().toISOString().split('T')[0];\r\n  };\r\n\r\n  // Get max date (30 days from now)\r\n  const getMaxDate = () => {\r\n    const maxDate = new Date();\r\n    maxDate.setDate(maxDate.getDate() + 30);\r\n    return maxDate.toISOString().split('T')[0];\r\n  };\r\n\r\n  return (\r\n    <div className=\"min-h-screen bg-gradient-to-br from-blue-50 via-indigo-50 to-purple-50 py-8 px-4\">\r\n      <div className=\"max-w-2xl mx-auto\">\r\n        {/* Header */}\r\n        <div className=\"text-center mb-8\">\r\n          <div className=\"w-16 h-16 bg-gradient-to-br from-blue-500 to-indigo-600 rounded-2xl flex items-center justify-center mx-auto mb-4\">\r\n            <Zap className=\"h-8 w-8 text-white\" />\r\n          </div>\r\n          <h1 className=\"text-3xl font-bold bg-gradient-to-r from-gray-900 to-gray-700 bg-clip-text text-transparent mb-2\">\r\n            Book Your EV Charging Slot\r\n          </h1>\r\n          <p className=\"text-gray-600\">Reserve your preferred charging time slot</p>\r\n        </div>\r\n\r\n        {/* Main Form Card */}\r\n        <div className=\"bg-white rounded-2xl shadow-xl border border-gray-100 overflow-hidden\">\r\n          <div className=\"p-8\">\r\n            <form onSubmit={handleSubmit} className=\"space-y-6\">\r\n              {/* Bunk Selection */}\r\n              <div>\r\n                <label htmlFor=\"bunk\" className=\"flex items-center text-sm font-semibold text-gray-700 mb-3\">\r\n                  <MapPin className=\"h-4 w-4 mr-2 text-blue-500\" />\r\n                  Select Charging Station\r\n                </label>\r\n                <select\r\n                  id=\"bunk\"\r\n                  value={selectedBunk}\r\n                  onChange={(e) => setSelectedBunk(e.target.value)}\r\n                  className=\"w-full p-4 border border-gray-200 rounded-xl focus:ring-2 focus:ring-blue-500 focus:border-transparent transition-all duration-200 bg-gray-50 hover:bg-white\"\r\n                  required\r\n                >\r\n                  <option value=\"\">Choose a charging station</option>\r\n                  {bunks.map(bunk => (\r\n                    <option key={bunk._id} value={bunk._id}>\r\n                      {bunk.name} - {bunk.address || bunk.location}\r\n                    </option>\r\n                  ))}\r\n                </select>\r\n                \r\n                {/* Bunk Details */}\r\n                {selectedBunkDetails && (\r\n                  <div className=\"mt-3 p-4 bg-blue-50 rounded-lg border border-blue-100\">\r\n                    <div className=\"flex items-center justify-between text-sm\">\r\n                      <div className=\"flex items-center text-gray-600\">\r\n                        <Clock className=\"h-4 w-4 mr-2\" />\r\n                        <span>Operating Hours: {selectedBunkDetails.operatingHours || '9:00 AM - 9:00 PM'}</span>\r\n                      </div>\r\n                      <div className=\"flex items-center text-green-600 font-medium\">\r\n                        <span>{selectedBunkDetails.slotsAvailable || 0} slots available</span>\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                )}\r\n              </div>\r\n              \r\n              {/* Date Selection */}\r\n              <div>\r\n                <label htmlFor=\"date\" className=\"flex items-center text-sm font-semibold text-gray-700 mb-3\">\r\n                  <Calendar className=\"h-4 w-4 mr-2 text-blue-500\" />\r\n                  Select Date\r\n                </label>\r\n                <input\r\n                  id=\"date\"\r\n                  type=\"date\"\r\n                  value={selectedDate}\r\n                  onChange={(e) => setSelectedDate(e.target.value)}\r\n                  className=\"w-full p-4 border border-gray-200 rounded-xl focus:ring-2 focus:ring-blue-500 focus:border-transparent transition-all duration-200 bg-gray-50 hover:bg-white\"\r\n                  min={getTodayDate()}\r\n                  max={getMaxDate()}\r\n                  required\r\n                />\r\n              </div>\r\n              \r\n              {/* Time Slot Selection */}\r\n              {selectedBunk && selectedDate && (\r\n                <div>\r\n                  <label className=\"flex items-center text-sm font-semibold text-gray-700 mb-3\">\r\n                    <Clock className=\"h-4 w-4 mr-2 text-blue-500\" />\r\n                    Select Time Slot\r\n                  </label>\r\n                  \r\n                  {loading ? (\r\n                    <div className=\"text-center py-12\">\r\n                      <div className=\"animate-spin rounded-full h-8 w-8 border-b-2 border-blue-600 mx-auto mb-4\"></div>\r\n                      <p className=\"text-gray-600\">Loading available slots...</p>\r\n                    </div>\r\n                  ) : availableSlots.length > 0 ? (\r\n                    <div className=\"grid grid-cols-1 sm:grid-cols-2 gap-3\">\r\n                      {availableSlots.map((slot, index) => (\r\n                        <button\r\n                          key={`${slot}-${index}`}\r\n                          type=\"button\"\r\n                          onClick={() => setSelectedSlot(slot)}\r\n                          className={`p-4 text-sm font-medium rounded-xl border-2 transition-all duration-200 ${\r\n                            selectedSlot === slot\r\n                              ? 'bg-gradient-to-r from-green-500 to-emerald-500 text-white border-green-500 shadow-lg transform scale-105'\r\n                              : 'bg-white text-gray-700 border-gray-200 hover:bg-gray-50 hover:border-gray-300'\r\n                          }`}\r\n                        >\r\n                          <div className=\"flex items-center justify-center\">\r\n                            <Clock className=\"h-4 w-4 mr-2\" />\r\n                            {formatTimeSlot(slot)}\r\n                          </div>\r\n                        </button>\r\n                      ))}\r\n                    </div>\r\n                  ) : (\r\n                    <div className=\"text-center py-12 bg-gray-50 rounded-xl\">\r\n                      <AlertCircle className=\"h-12 w-12 text-gray-400 mx-auto mb-4\" />\r\n                      <h3 className=\"text-lg font-medium text-gray-900 mb-2\">No Available Slots</h3>\r\n                      <p className=\"text-gray-500\">No charging slots available for this date. Please try another date.</p>\r\n                    </div>\r\n                  )}\r\n                </div>\r\n              )}\r\n              \r\n              {/* Submit Button */}\r\n              <button\r\n                type=\"submit\"\r\n                disabled={loading || !selectedSlot}\r\n                className={`w-full py-4 rounded-xl text-white font-semibold transition-all duration-200 ${\r\n                  loading || !selectedSlot\r\n                    ? 'bg-gray-400 cursor-not-allowed'\r\n                    : 'bg-gradient-to-r from-blue-600 to-indigo-600 hover:from-blue-700 hover:to-indigo-700 shadow-lg hover:shadow-xl transform hover:-translate-y-0.5'\r\n                }`}\r\n              >\r\n                {loading ? (\r\n                  <div className=\"flex items-center justify-center\">\r\n                    <div className=\"animate-spin rounded-full h-5 w-5 border-b-2 border-white mr-2\"></div>\r\n                    Processing...\r\n                  </div>\r\n                ) : (\r\n                  <div className=\"flex items-center justify-center\">\r\n                    <CheckCircle className=\"h-5 w-5 mr-2\" />\r\n                    Book Charging Slot\r\n                  </div>\r\n                )}\r\n              </button>\r\n            </form>\r\n          </div>\r\n          \r\n          {/* Status Message */}\r\n          {message.text && (\r\n            <div className={`px-8 py-4 border-t ${\r\n              message.type === 'success' \r\n                ? 'bg-green-50 border-green-100' \r\n                : 'bg-red-50 border-red-100'\r\n            }`}>\r\n              <div className={`flex items-center ${\r\n                message.type === 'success' ? 'text-green-800' : 'text-red-800'\r\n              }`}>\r\n                {message.type === 'success' ? (\r\n                  <CheckCircle className=\"h-5 w-5 mr-2\" />\r\n                ) : (\r\n                  <AlertCircle className=\"h-5 w-5 mr-2\" />\r\n                )}\r\n                <span className=\"font-medium\">{message.text}</span>\r\n              </div>\r\n            </div>\r\n          )}\r\n        </div>\r\n\r\n        {/* Info Card */}\r\n        <div className=\"mt-6 bg-blue-50 rounded-xl p-6 border border-blue-100\">\r\n          <h3 className=\"font-semibold text-blue-900 mb-2\">Booking Information</h3>\r\n          <ul className=\"text-sm text-blue-800 space-y-1\">\r\n            <li>• Each slot is typically 1 hour duration</li>\r\n            <li>• Slots are shown in your local time</li>\r\n            <li>• You can book up to 30 days in advance</li>\r\n            <li>• Please arrive on time for your booking</li>\r\n          </ul>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default BookingForm;"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,OAAOC,KAAK,MAAM,OAAO;AACzB,SAASC,KAAK,EAAEC,MAAM,EAAEC,QAAQ,EAAEC,GAAG,EAAEC,WAAW,EAAEC,WAAW,QAAQ,cAAc;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEtF,MAAMC,WAAW,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACxB,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGd,QAAQ,CAAC,EAAE,CAAC;EACtC,MAAM,CAACe,YAAY,EAAEC,eAAe,CAAC,GAAGhB,QAAQ,CAAC,EAAE,CAAC;EACpD,MAAM,CAACiB,YAAY,EAAEC,eAAe,CAAC,GAAGlB,QAAQ,CAAC,EAAE,CAAC;EACpD,MAAM,CAACmB,cAAc,EAAEC,iBAAiB,CAAC,GAAGpB,QAAQ,CAAC,EAAE,CAAC;EACxD,MAAM,CAACqB,YAAY,EAAEC,eAAe,CAAC,GAAGtB,QAAQ,CAAC,EAAE,CAAC;EACpD,MAAM,CAACuB,OAAO,EAAEC,UAAU,CAAC,GAAGxB,QAAQ,CAAC,KAAK,CAAC;EAC7C,MAAM,CAACyB,OAAO,EAAEC,UAAU,CAAC,GAAG1B,QAAQ,CAAC;IAAE2B,IAAI,EAAE,EAAE;IAAEC,IAAI,EAAE;EAAG,CAAC,CAAC;EAC9D,MAAM,CAACC,mBAAmB,EAAEC,sBAAsB,CAAC,GAAG9B,QAAQ,CAAC,IAAI,CAAC;;EAEpE;EACAC,SAAS,CAAC,MAAM;IACd,MAAM8B,UAAU,GAAG,MAAAA,CAAA,KAAY;MAC7B,IAAI;QACF,MAAMC,GAAG,GAAG,MAAM9B,KAAK,CAAC+B,GAAG,CAAC,YAAY,CAAC;QACzCnB,QAAQ,CAACkB,GAAG,CAACE,IAAI,CAAC;MACpB,CAAC,CAAC,OAAOC,GAAG,EAAE;QACZC,OAAO,CAACC,KAAK,CAAC,uBAAuB,EAAEF,GAAG,CAAC;QAC3CT,UAAU,CAAC;UAAEC,IAAI,EAAE,yBAAyB;UAAEC,IAAI,EAAE;QAAQ,CAAC,CAAC;MAChE;IACF,CAAC;IAEDG,UAAU,CAAC,CAAC;EACd,CAAC,EAAE,EAAE,CAAC;;EAEN;EACA9B,SAAS,CAAC,MAAM;IACd,IAAIc,YAAY,EAAE;MAChB,MAAMuB,WAAW,GAAGzB,KAAK,CAAC0B,IAAI,CAACC,IAAI,IAAIA,IAAI,CAACC,GAAG,KAAK1B,YAAY,CAAC;MACjEe,sBAAsB,CAACQ,WAAW,CAAC;IACrC,CAAC,MAAM;MACLR,sBAAsB,CAAC,IAAI,CAAC;IAC9B;EACF,CAAC,EAAE,CAACf,YAAY,EAAEF,KAAK,CAAC,CAAC;;EAEzB;EACAZ,SAAS,CAAC,MAAM;IACd,MAAMyC,mBAAmB,GAAG,MAAAA,CAAA,KAAY;MACtC,IAAI,CAAC3B,YAAY,IAAI,CAACE,YAAY,EAAE;MAEpCO,UAAU,CAAC,IAAI,CAAC;MAChB,IAAI;QACF,MAAMQ,GAAG,GAAG,MAAM9B,KAAK,CAAC+B,GAAG,CAAC,iCAAiClB,YAAY,IAAIE,YAAY,EAAE,CAAC;QAC5F;QACAG,iBAAiB,CAACY,GAAG,CAACE,IAAI,CAACA,IAAI,CAACf,cAAc,IAAI,EAAE,CAAC;QACrDG,eAAe,CAAC,EAAE,CAAC,CAAC,CAAC;MACvB,CAAC,CAAC,OAAOa,GAAG,EAAE;QACZC,OAAO,CAACC,KAAK,CAAC,iCAAiC,EAAEF,GAAG,CAAC;QACrDT,UAAU,CAAC;UAAEC,IAAI,EAAE,gCAAgC;UAAEC,IAAI,EAAE;QAAQ,CAAC,CAAC;MACvE,CAAC,SAAS;QACRJ,UAAU,CAAC,KAAK,CAAC;MACnB;IACF,CAAC;IAEDkB,mBAAmB,CAAC,CAAC;EACvB,CAAC,EAAE,CAAC3B,YAAY,EAAEE,YAAY,CAAC,CAAC;EAEhC,MAAM0B,YAAY,GAAG,MAAOC,CAAC,IAAK;IAChCA,CAAC,CAACC,cAAc,CAAC,CAAC;IAElB,IAAI,CAAC9B,YAAY,IAAI,CAACM,YAAY,EAAE;MAClCK,UAAU,CAAC;QAAEC,IAAI,EAAE,oCAAoC;QAAEC,IAAI,EAAE;MAAQ,CAAC,CAAC;MACzE;IACF;IAEAJ,UAAU,CAAC,IAAI,CAAC;IAChB,IAAI;MACF;MACA,MAAMsB,QAAQ,GAAG,MAAM5C,KAAK,CAAC6C,IAAI,CAAC,kCAAkC,EAAE;QACpEC,MAAM,EAAEjC,YAAY;QACpBkC,QAAQ,EAAE5B;MACZ,CAAC,CAAC;MAEF,IAAI,CAACyB,QAAQ,CAACZ,IAAI,CAACA,IAAI,CAACgB,SAAS,EAAE;QACjCxB,UAAU,CAAC;UAAEC,IAAI,EAAE,0DAA0D;UAAEC,IAAI,EAAE;QAAQ,CAAC,CAAC;QAC/F;MACF;;MAEA;MACA,MAAM1B,KAAK,CAAC6C,IAAI,CAAC,sBAAsB,EAAE;QACvCC,MAAM,EAAEjC,YAAY;QACpBkC,QAAQ,EAAE5B;MACZ,CAAC,EAAE;QACD8B,OAAO,EAAE;UAAEC,aAAa,EAAE,UAAUC,YAAY,CAACC,OAAO,CAAC,OAAO,CAAC;QAAG;MACtE,CAAC,CAAC;MAEF5B,UAAU,CAAC;QAAEC,IAAI,EAAE,2BAA2B;QAAEC,IAAI,EAAE;MAAU,CAAC,CAAC;;MAElE;MACAN,eAAe,CAAC,EAAE,CAAC;;MAEnB;MACA,MAAMU,GAAG,GAAG,MAAM9B,KAAK,CAAC+B,GAAG,CAAC,iCAAiClB,YAAY,IAAIE,YAAY,EAAE,CAAC;MAC5FG,iBAAiB,CAACY,GAAG,CAACE,IAAI,CAACA,IAAI,CAACf,cAAc,IAAI,EAAE,CAAC;IAEvD,CAAC,CAAC,OAAOgB,GAAG,EAAE;MAAA,IAAAoB,aAAA;MACZnB,OAAO,CAACC,KAAK,CAAC,gBAAgB,EAAEF,GAAG,CAAC;MAEpC,IAAI,EAAAoB,aAAA,GAAApB,GAAG,CAACqB,QAAQ,cAAAD,aAAA,uBAAZA,aAAA,CAAcE,MAAM,MAAK,GAAG,EAAE;QAChC/B,UAAU,CAAC;UAAEC,IAAI,EAAE,8BAA8B;UAAEC,IAAI,EAAE;QAAQ,CAAC,CAAC;MACrE,CAAC,MAAM;QAAA,IAAA8B,cAAA,EAAAC,mBAAA;QACLjC,UAAU,CAAC;UAAEC,IAAI,EAAE,EAAA+B,cAAA,GAAAvB,GAAG,CAACqB,QAAQ,cAAAE,cAAA,wBAAAC,mBAAA,GAAZD,cAAA,CAAcxB,IAAI,cAAAyB,mBAAA,uBAAlBA,mBAAA,CAAoBlC,OAAO,KAAI,gBAAgB;UAAEG,IAAI,EAAE;QAAQ,CAAC,CAAC;MACtF;IACF,CAAC,SAAS;MACRJ,UAAU,CAAC,KAAK,CAAC;IACnB;EACF,CAAC;;EAED;EACA,MAAMoC,cAAc,GAAIC,QAAQ,IAAK;IACnC,IAAI,CAACA,QAAQ,EAAE,OAAO,EAAE;;IAExB;IACA,IAAI,OAAOA,QAAQ,KAAK,QAAQ,IAAIA,QAAQ,CAACC,QAAQ,CAAC,GAAG,CAAC,EAAE;MAC1D,MAAMC,IAAI,GAAG,IAAIC,IAAI,CAACH,QAAQ,CAAC;MAC/B,MAAMI,SAAS,GAAGF,IAAI,CAACG,QAAQ,CAAC,CAAC;MACjC,MAAMC,WAAW,GAAGJ,IAAI,CAACK,UAAU,CAAC,CAAC;MACrC,MAAMC,OAAO,GAAGJ,SAAS,GAAG,CAAC,CAAC,CAAC;;MAE/B,OAAO,GAAGK,UAAU,CAACL,SAAS,EAAEE,WAAW,CAAC,MAAMG,UAAU,CAACD,OAAO,EAAEF,WAAW,CAAC,EAAE;IACtF;;IAEA;IACA,IAAI,OAAON,QAAQ,KAAK,QAAQ,IAAIA,QAAQ,CAACU,SAAS,IAAIV,QAAQ,CAACW,OAAO,EAAE;MAC1E,OAAO,GAAGC,oBAAoB,CAACZ,QAAQ,CAACU,SAAS,CAAC,MAAME,oBAAoB,CAACZ,QAAQ,CAACW,OAAO,CAAC,EAAE;IAClG;;IAEA;IACA,IAAI,OAAOX,QAAQ,KAAK,QAAQ,IAAIA,QAAQ,CAACC,QAAQ,CAAC,GAAG,CAAC,EAAE;MAC1D,MAAM,CAACY,KAAK,EAAEC,OAAO,CAAC,GAAGd,QAAQ,CAACe,KAAK,CAAC,GAAG,CAAC;MAC5C,MAAMX,SAAS,GAAGY,QAAQ,CAACH,KAAK,EAAE,EAAE,CAAC;MACrC,MAAMP,WAAW,GAAGU,QAAQ,CAACF,OAAO,EAAE,EAAE,CAAC;MACzC,MAAMN,OAAO,GAAGJ,SAAS,GAAG,CAAC;MAE7B,OAAO,GAAGK,UAAU,CAACL,SAAS,EAAEE,WAAW,CAAC,MAAMG,UAAU,CAACD,OAAO,EAAEF,WAAW,CAAC,EAAE;IACtF;;IAEA;IACA,IAAI,OAAON,QAAQ,KAAK,QAAQ,EAAE;MAChC,OAAO,GAAGS,UAAU,CAACT,QAAQ,EAAE,CAAC,CAAC,MAAMS,UAAU,CAACT,QAAQ,GAAG,CAAC,EAAE,CAAC,CAAC,EAAE;IACtE;IAEA,OAAOA,QAAQ,CAACiB,QAAQ,CAAC,CAAC;EAC5B,CAAC;;EAED;EACA,MAAMR,UAAU,GAAGA,CAACI,KAAK,EAAEC,OAAO,GAAG,CAAC,KAAK;IACzC,MAAMI,IAAI,GAAGL,KAAK,IAAI,EAAE,GAAG,IAAI,GAAG,IAAI;IACtC,MAAMM,WAAW,GAAGN,KAAK,GAAG,EAAE,IAAI,EAAE;IACpC,MAAMO,aAAa,GAAGN,OAAO,CAACG,QAAQ,CAAC,CAAC,CAACI,QAAQ,CAAC,CAAC,EAAE,GAAG,CAAC;IACzD,OAAO,GAAGF,WAAW,IAAIC,aAAa,IAAIF,IAAI,EAAE;EAClD,CAAC;;EAED;EACA,MAAMN,oBAAoB,GAAIU,UAAU,IAAK;IAC3C,IAAI,CAACA,UAAU,EAAE,OAAO,EAAE;;IAE1B;IACA,IAAIA,UAAU,CAACrB,QAAQ,CAAC,GAAG,CAAC,EAAE;MAC5B,MAAMC,IAAI,GAAG,IAAIC,IAAI,CAACmB,UAAU,CAAC;MACjC,OAAOb,UAAU,CAACP,IAAI,CAACG,QAAQ,CAAC,CAAC,EAAEH,IAAI,CAACK,UAAU,CAAC,CAAC,CAAC;IACvD;;IAEA;IACA,MAAM,CAACM,KAAK,EAAEC,OAAO,CAAC,GAAGQ,UAAU,CAACP,KAAK,CAAC,GAAG,CAAC;IAC9C,OAAON,UAAU,CAACO,QAAQ,CAACH,KAAK,EAAE,EAAE,CAAC,EAAEG,QAAQ,CAACF,OAAO,EAAE,EAAE,CAAC,CAAC;EAC/D,CAAC;;EAED;EACA,MAAMS,YAAY,GAAGA,CAAA,KAAM;IACzB,OAAO,IAAIpB,IAAI,CAAC,CAAC,CAACqB,WAAW,CAAC,CAAC,CAACT,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC;EAC/C,CAAC;;EAED;EACA,MAAMU,UAAU,GAAGA,CAAA,KAAM;IACvB,MAAMC,OAAO,GAAG,IAAIvB,IAAI,CAAC,CAAC;IAC1BuB,OAAO,CAACC,OAAO,CAACD,OAAO,CAACE,OAAO,CAAC,CAAC,GAAG,EAAE,CAAC;IACvC,OAAOF,OAAO,CAACF,WAAW,CAAC,CAAC,CAACT,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC;EAC5C,CAAC;EAED,oBACElE,OAAA;IAAKgF,SAAS,EAAC,kFAAkF;IAAAC,QAAA,eAC/FjF,OAAA;MAAKgF,SAAS,EAAC,mBAAmB;MAAAC,QAAA,gBAEhCjF,OAAA;QAAKgF,SAAS,EAAC,kBAAkB;QAAAC,QAAA,gBAC/BjF,OAAA;UAAKgF,SAAS,EAAC,mHAAmH;UAAAC,QAAA,eAChIjF,OAAA,CAACJ,GAAG;YAACoF,SAAS,EAAC;UAAoB;YAAAE,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAE;QAAC;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACnC,CAAC,eACNrF,OAAA;UAAIgF,SAAS,EAAC,kGAAkG;UAAAC,QAAA,EAAC;QAEjH;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAI,CAAC,eACLrF,OAAA;UAAGgF,SAAS,EAAC,eAAe;UAAAC,QAAA,EAAC;QAAyC;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAG,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACvE,CAAC,eAGNrF,OAAA;QAAKgF,SAAS,EAAC,uEAAuE;QAAAC,QAAA,gBACpFjF,OAAA;UAAKgF,SAAS,EAAC,KAAK;UAAAC,QAAA,eAClBjF,OAAA;YAAMsF,QAAQ,EAAErD,YAAa;YAAC+C,SAAS,EAAC,WAAW;YAAAC,QAAA,gBAEjDjF,OAAA;cAAAiF,QAAA,gBACEjF,OAAA;gBAAOuF,OAAO,EAAC,MAAM;gBAACP,SAAS,EAAC,4DAA4D;gBAAAC,QAAA,gBAC1FjF,OAAA,CAACN,MAAM;kBAACsF,SAAS,EAAC;gBAA4B;kBAAAE,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OAAE,CAAC,2BAEnD;cAAA;gBAAAH,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAO,CAAC,eACRrF,OAAA;gBACEwF,EAAE,EAAC,MAAM;gBACTC,KAAK,EAAEpF,YAAa;gBACpBqF,QAAQ,EAAGxD,CAAC,IAAK5B,eAAe,CAAC4B,CAAC,CAACyD,MAAM,CAACF,KAAK,CAAE;gBACjDT,SAAS,EAAC,8JAA8J;gBACxKY,QAAQ;gBAAAX,QAAA,gBAERjF,OAAA;kBAAQyF,KAAK,EAAC,EAAE;kBAAAR,QAAA,EAAC;gBAAyB;kBAAAC,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OAAQ,CAAC,EAClDlF,KAAK,CAAC0F,GAAG,CAAC/D,IAAI,iBACb9B,OAAA;kBAAuByF,KAAK,EAAE3D,IAAI,CAACC,GAAI;kBAAAkD,QAAA,GACpCnD,IAAI,CAACgE,IAAI,EAAC,KAAG,EAAChE,IAAI,CAACiE,OAAO,IAAIjE,IAAI,CAACkE,QAAQ;gBAAA,GADjClE,IAAI,CAACC,GAAG;kBAAAmD,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OAEb,CACT,CAAC;cAAA;gBAAAH,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OACI,CAAC,EAGRlE,mBAAmB,iBAClBnB,OAAA;gBAAKgF,SAAS,EAAC,uDAAuD;gBAAAC,QAAA,eACpEjF,OAAA;kBAAKgF,SAAS,EAAC,2CAA2C;kBAAAC,QAAA,gBACxDjF,OAAA;oBAAKgF,SAAS,EAAC,iCAAiC;oBAAAC,QAAA,gBAC9CjF,OAAA,CAACP,KAAK;sBAACuF,SAAS,EAAC;oBAAc;sBAAAE,QAAA,EAAAC,YAAA;sBAAAC,UAAA;sBAAAC,YAAA;oBAAA,OAAE,CAAC,eAClCrF,OAAA;sBAAAiF,QAAA,GAAM,mBAAiB,EAAC9D,mBAAmB,CAAC8E,cAAc,IAAI,mBAAmB;oBAAA;sBAAAf,QAAA,EAAAC,YAAA;sBAAAC,UAAA;sBAAAC,YAAA;oBAAA,OAAO,CAAC;kBAAA;oBAAAH,QAAA,EAAAC,YAAA;oBAAAC,UAAA;oBAAAC,YAAA;kBAAA,OACtF,CAAC,eACNrF,OAAA;oBAAKgF,SAAS,EAAC,8CAA8C;oBAAAC,QAAA,eAC3DjF,OAAA;sBAAAiF,QAAA,GAAO9D,mBAAmB,CAAC+E,cAAc,IAAI,CAAC,EAAC,kBAAgB;oBAAA;sBAAAhB,QAAA,EAAAC,YAAA;sBAAAC,UAAA;sBAAAC,YAAA;oBAAA,OAAM;kBAAC;oBAAAH,QAAA,EAAAC,YAAA;oBAAAC,UAAA;oBAAAC,YAAA;kBAAA,OACnE,CAAC;gBAAA;kBAAAH,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OACH;cAAC;gBAAAH,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OACH,CACN;YAAA;cAAAH,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OACE,CAAC,eAGNrF,OAAA;cAAAiF,QAAA,gBACEjF,OAAA;gBAAOuF,OAAO,EAAC,MAAM;gBAACP,SAAS,EAAC,4DAA4D;gBAAAC,QAAA,gBAC1FjF,OAAA,CAACL,QAAQ;kBAACqF,SAAS,EAAC;gBAA4B;kBAAAE,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OAAE,CAAC,eAErD;cAAA;gBAAAH,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAO,CAAC,eACRrF,OAAA;gBACEwF,EAAE,EAAC,MAAM;gBACTtE,IAAI,EAAC,MAAM;gBACXuE,KAAK,EAAElF,YAAa;gBACpBmF,QAAQ,EAAGxD,CAAC,IAAK1B,eAAe,CAAC0B,CAAC,CAACyD,MAAM,CAACF,KAAK,CAAE;gBACjDT,SAAS,EAAC,8JAA8J;gBACxKmB,GAAG,EAAEzB,YAAY,CAAC,CAAE;gBACpB0B,GAAG,EAAExB,UAAU,CAAC,CAAE;gBAClBgB,QAAQ;cAAA;gBAAAV,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OACT,CAAC;YAAA;cAAAH,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OACC,CAAC,EAGLhF,YAAY,IAAIE,YAAY,iBAC3BP,OAAA;cAAAiF,QAAA,gBACEjF,OAAA;gBAAOgF,SAAS,EAAC,4DAA4D;gBAAAC,QAAA,gBAC3EjF,OAAA,CAACP,KAAK;kBAACuF,SAAS,EAAC;gBAA4B;kBAAAE,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OAAE,CAAC,oBAElD;cAAA;gBAAAH,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAO,CAAC,EAEPxE,OAAO,gBACNb,OAAA;gBAAKgF,SAAS,EAAC,mBAAmB;gBAAAC,QAAA,gBAChCjF,OAAA;kBAAKgF,SAAS,EAAC;gBAA2E;kBAAAE,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OAAM,CAAC,eACjGrF,OAAA;kBAAGgF,SAAS,EAAC,eAAe;kBAAAC,QAAA,EAAC;gBAA0B;kBAAAC,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OAAG,CAAC;cAAA;gBAAAH,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OACxD,CAAC,GACJ5E,cAAc,CAAC4F,MAAM,GAAG,CAAC,gBAC3BrG,OAAA;gBAAKgF,SAAS,EAAC,uCAAuC;gBAAAC,QAAA,EACnDxE,cAAc,CAACoF,GAAG,CAAC,CAACS,IAAI,EAAEC,KAAK,kBAC9BvG,OAAA;kBAEEkB,IAAI,EAAC,QAAQ;kBACbsF,OAAO,EAAEA,CAAA,KAAM5F,eAAe,CAAC0F,IAAI,CAAE;kBACrCtB,SAAS,EAAE,2EACTrE,YAAY,KAAK2F,IAAI,GACjB,0GAA0G,GAC1G,+EAA+E,EAClF;kBAAArB,QAAA,eAEHjF,OAAA;oBAAKgF,SAAS,EAAC,kCAAkC;oBAAAC,QAAA,gBAC/CjF,OAAA,CAACP,KAAK;sBAACuF,SAAS,EAAC;oBAAc;sBAAAE,QAAA,EAAAC,YAAA;sBAAAC,UAAA;sBAAAC,YAAA;oBAAA,OAAE,CAAC,EACjCnC,cAAc,CAACoD,IAAI,CAAC;kBAAA;oBAAApB,QAAA,EAAAC,YAAA;oBAAAC,UAAA;oBAAAC,YAAA;kBAAA,OAClB;gBAAC,GAZD,GAAGiB,IAAI,IAAIC,KAAK,EAAE;kBAAArB,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OAajB,CACT;cAAC;gBAAAH,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OACC,CAAC,gBAENrF,OAAA;gBAAKgF,SAAS,EAAC,yCAAyC;gBAAAC,QAAA,gBACtDjF,OAAA,CAACF,WAAW;kBAACkF,SAAS,EAAC;gBAAsC;kBAAAE,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OAAE,CAAC,eAChErF,OAAA;kBAAIgF,SAAS,EAAC,wCAAwC;kBAAAC,QAAA,EAAC;gBAAkB;kBAAAC,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OAAI,CAAC,eAC9ErF,OAAA;kBAAGgF,SAAS,EAAC,eAAe;kBAAAC,QAAA,EAAC;gBAAmE;kBAAAC,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OAAG,CAAC;cAAA;gBAAAH,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OACjG,CACN;YAAA;cAAAH,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OACE,CACN,eAGDrF,OAAA;cACEkB,IAAI,EAAC,QAAQ;cACbuF,QAAQ,EAAE5F,OAAO,IAAI,CAACF,YAAa;cACnCqE,SAAS,EAAE,+EACTnE,OAAO,IAAI,CAACF,YAAY,GACpB,gCAAgC,GAChC,iJAAiJ,EACpJ;cAAAsE,QAAA,EAEFpE,OAAO,gBACNb,OAAA;gBAAKgF,SAAS,EAAC,kCAAkC;gBAAAC,QAAA,gBAC/CjF,OAAA;kBAAKgF,SAAS,EAAC;gBAAgE;kBAAAE,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OAAM,CAAC,iBAExF;cAAA;gBAAAH,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAK,CAAC,gBAENrF,OAAA;gBAAKgF,SAAS,EAAC,kCAAkC;gBAAAC,QAAA,gBAC/CjF,OAAA,CAACH,WAAW;kBAACmF,SAAS,EAAC;gBAAc;kBAAAE,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OAAE,CAAC,sBAE1C;cAAA;gBAAAH,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAK;YACN;cAAAH,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OACK,CAAC;UAAA;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACL;QAAC;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACJ,CAAC,EAGLtE,OAAO,CAACE,IAAI,iBACXjB,OAAA;UAAKgF,SAAS,EAAE,sBACdjE,OAAO,CAACG,IAAI,KAAK,SAAS,GACtB,8BAA8B,GAC9B,0BAA0B,EAC7B;UAAA+D,QAAA,eACDjF,OAAA;YAAKgF,SAAS,EAAE,qBACdjE,OAAO,CAACG,IAAI,KAAK,SAAS,GAAG,gBAAgB,GAAG,cAAc,EAC7D;YAAA+D,QAAA,GACAlE,OAAO,CAACG,IAAI,KAAK,SAAS,gBACzBlB,OAAA,CAACH,WAAW;cAACmF,SAAS,EAAC;YAAc;cAAAE,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAE,CAAC,gBAExCrF,OAAA,CAACF,WAAW;cAACkF,SAAS,EAAC;YAAc;cAAAE,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAE,CACxC,eACDrF,OAAA;cAAMgF,SAAS,EAAC,aAAa;cAAAC,QAAA,EAAElE,OAAO,CAACE;YAAI;cAAAiE,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAO,CAAC;UAAA;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAChD;QAAC;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACH,CACN;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACE,CAAC,eAGNrF,OAAA;QAAKgF,SAAS,EAAC,uDAAuD;QAAAC,QAAA,gBACpEjF,OAAA;UAAIgF,SAAS,EAAC,kCAAkC;UAAAC,QAAA,EAAC;QAAmB;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAI,CAAC,eACzErF,OAAA;UAAIgF,SAAS,EAAC,iCAAiC;UAAAC,QAAA,gBAC7CjF,OAAA;YAAAiF,QAAA,EAAI;UAAwC;YAAAC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAI,CAAC,eACjDrF,OAAA;YAAAiF,QAAA,EAAI;UAAoC;YAAAC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAI,CAAC,eAC7CrF,OAAA;YAAAiF,QAAA,EAAI;UAAuC;YAAAC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAI,CAAC,eAChDrF,OAAA;YAAAiF,QAAA,EAAI;UAAwC;YAAAC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAI,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAC/C,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACF,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACH;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACH,CAAC;AAEV,CAAC;AAACnF,EAAA,CAnWID,WAAW;AAAAyG,EAAA,GAAXzG,WAAW;AAqWjB,eAAeA,WAAW;AAAC,IAAAyG,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}