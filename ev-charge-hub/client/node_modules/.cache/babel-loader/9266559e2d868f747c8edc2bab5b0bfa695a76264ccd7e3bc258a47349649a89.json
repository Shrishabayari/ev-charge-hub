{"ast":null,"code":"import express from 'express';\nimport authMiddleware from '../middleware/auth.js';\nimport { getBookingsByBunk, createBooking, getUserBookings, cancelBooking, rescheduleBooking, checkSlotAvailability, getAvailableSlots, getAllBookings, getBookingStats, updateBookingStatus, getBookingDetails } from '../controllers/bookingController.js';\nconst router = express.Router();\n\n// Public routes \nrouter.get('/bunk/:bunkId', getBookingsByBunk);\nrouter.post('/check-availability', checkSlotAvailability);\nrouter.get('/available-slots/:bunkId/:date', getAvailableSlots);\n\n// Protected routes - require authentication\nrouter.post('/create', authMiddleware, createBooking);\nrouter.get('/user', authMiddleware, getUserBookings);\nrouter.put('/cancel/:id', authMiddleware, cancelBooking);\nrouter.put('/reschedule/:id', authMiddleware, rescheduleBooking);\nrouter.get('/', authMiddleware, getAllBookings);\n\n// Get booking statistics for admin dashboard\nrouter.get('/bookings/stats', authMiddleware, getBookingStats);\n\n// Get details of a specific booking\nrouter.get('/bookings/:id', authMiddleware, getBookingDetails);\n\n// Update booking status (active, cancelled, completed)\nrouter.patch('/bookings/:id/status', authMiddleware, updateBookingStatus);\nexport default router;","map":{"version":3,"names":["express","authMiddleware","getBookingsByBunk","createBooking","getUserBookings","cancelBooking","rescheduleBooking","checkSlotAvailability","getAvailableSlots","getAllBookings","getBookingStats","updateBookingStatus","getBookingDetails","router","Router","get","post","put","patch"],"sources":["D:/UnifiedMentor/electric-charger-hub/ev-charge-hub/client/src/components/admin/AdminBookingList.jsx"],"sourcesContent":["import express from 'express'; \r\nimport authMiddleware from '../middleware/auth.js'; \r\nimport {\r\n  getBookingsByBunk,\r\n  createBooking,\r\n  getUserBookings,\r\n  cancelBooking,\r\n  rescheduleBooking,\r\n  checkSlotAvailability,\r\n  getAvailableSlots , getAllBookings, \r\n  getBookingStats, \r\n  updateBookingStatus, \r\n  getBookingDetails \r\n} from '../controllers/bookingController.js';\r\n\r\nconst router = express.Router();\r\n\r\n// Public routes \r\nrouter.get('/bunk/:bunkId', getBookingsByBunk);\r\nrouter.post('/check-availability', checkSlotAvailability);\r\nrouter.get('/available-slots/:bunkId/:date', getAvailableSlots);\r\n\r\n// Protected routes - require authentication\r\nrouter.post('/create', authMiddleware, createBooking);\r\nrouter.get('/user', authMiddleware, getUserBookings);\r\nrouter.put('/cancel/:id', authMiddleware, cancelBooking);\r\nrouter.put('/reschedule/:id', authMiddleware, rescheduleBooking);\r\nrouter.get('/', authMiddleware, getAllBookings);\r\n\r\n// Get booking statistics for admin dashboard\r\nrouter.get('/bookings/stats', authMiddleware, getBookingStats);\r\n\r\n// Get details of a specific booking\r\nrouter.get('/bookings/:id', authMiddleware, getBookingDetails);\r\n\r\n// Update booking status (active, cancelled, completed)\r\nrouter.patch('/bookings/:id/status', authMiddleware, updateBookingStatus);\r\nexport default router;"],"mappings":"AAAA,OAAOA,OAAO,MAAM,SAAS;AAC7B,OAAOC,cAAc,MAAM,uBAAuB;AAClD,SACEC,iBAAiB,EACjBC,aAAa,EACbC,eAAe,EACfC,aAAa,EACbC,iBAAiB,EACjBC,qBAAqB,EACrBC,iBAAiB,EAAGC,cAAc,EAClCC,eAAe,EACfC,mBAAmB,EACnBC,iBAAiB,QACZ,qCAAqC;AAE5C,MAAMC,MAAM,GAAGb,OAAO,CAACc,MAAM,CAAC,CAAC;;AAE/B;AACAD,MAAM,CAACE,GAAG,CAAC,eAAe,EAAEb,iBAAiB,CAAC;AAC9CW,MAAM,CAACG,IAAI,CAAC,qBAAqB,EAAET,qBAAqB,CAAC;AACzDM,MAAM,CAACE,GAAG,CAAC,gCAAgC,EAAEP,iBAAiB,CAAC;;AAE/D;AACAK,MAAM,CAACG,IAAI,CAAC,SAAS,EAAEf,cAAc,EAAEE,aAAa,CAAC;AACrDU,MAAM,CAACE,GAAG,CAAC,OAAO,EAAEd,cAAc,EAAEG,eAAe,CAAC;AACpDS,MAAM,CAACI,GAAG,CAAC,aAAa,EAAEhB,cAAc,EAAEI,aAAa,CAAC;AACxDQ,MAAM,CAACI,GAAG,CAAC,iBAAiB,EAAEhB,cAAc,EAAEK,iBAAiB,CAAC;AAChEO,MAAM,CAACE,GAAG,CAAC,GAAG,EAAEd,cAAc,EAAEQ,cAAc,CAAC;;AAE/C;AACAI,MAAM,CAACE,GAAG,CAAC,iBAAiB,EAAEd,cAAc,EAAES,eAAe,CAAC;;AAE9D;AACAG,MAAM,CAACE,GAAG,CAAC,eAAe,EAAEd,cAAc,EAAEW,iBAAiB,CAAC;;AAE9D;AACAC,MAAM,CAACK,KAAK,CAAC,sBAAsB,EAAEjB,cAAc,EAAEU,mBAAmB,CAAC;AACzE,eAAeE,MAAM","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}