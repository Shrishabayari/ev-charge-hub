{"ast":null,"code":"const express = require('express');\nconst connectDB = require('./config/db');\nconst cors = require('cors');\nconst authRoutes = require('./routes/auth');\nrequire('dotenv').config();\n\n// Connect to the database\nconnectDB();\napp.use(express.json()); // Parse JSON request bodies\napp.use(cors()); // Enable CORS for frontend-backend communication\n// Routes\napp.use('/api/auth', authRoutes);\n\n// Start the server\nconst PORT = process.env.PORT || 5000;\napp.listen(PORT, () => {\n  console.log(`Server running on port ${PORT}`);\n});","map":{"version":3,"names":["express","require","connectDB","cors","authRoutes","config","app","use","json","PORT","process","env","listen","console","log"],"sources":["D:/UnifiedMentor/electric-charger-hub/ev-charge-hub/client/src/App.jsx"],"sourcesContent":["const express = require('express');\r\n const connectDB = require('./config/db');\r\n const cors = require('cors');\r\n const authRoutes = require('./routes/auth');\r\n require('dotenv').config();\r\n\r\n // Connect to the database\r\n connectDB();\r\n app.use(express.json()); // Parse JSON request bodies\r\n app.use(cors()); // Enable CORS for frontend-backend communication\r\n // Routes\r\n app.use('/api/auth', authRoutes);\r\n \r\n // Start the server\r\n const PORT = process.env.PORT || 5000;\r\n app.listen(PORT, () => {\r\n   console.log(`Server running on port ${PORT}`);\r\n });"],"mappings":"AAAA,MAAMA,OAAO,GAAGC,OAAO,CAAC,SAAS,CAAC;AACjC,MAAMC,SAAS,GAAGD,OAAO,CAAC,aAAa,CAAC;AACxC,MAAME,IAAI,GAAGF,OAAO,CAAC,MAAM,CAAC;AAC5B,MAAMG,UAAU,GAAGH,OAAO,CAAC,eAAe,CAAC;AAC3CA,OAAO,CAAC,QAAQ,CAAC,CAACI,MAAM,CAAC,CAAC;;AAE1B;AACAH,SAAS,CAAC,CAAC;AACXI,GAAG,CAACC,GAAG,CAACP,OAAO,CAACQ,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC;AACzBF,GAAG,CAACC,GAAG,CAACJ,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC;AACjB;AACAG,GAAG,CAACC,GAAG,CAAC,WAAW,EAAEH,UAAU,CAAC;;AAEhC;AACA,MAAMK,IAAI,GAAGC,OAAO,CAACC,GAAG,CAACF,IAAI,IAAI,IAAI;AACrCH,GAAG,CAACM,MAAM,CAACH,IAAI,EAAE,MAAM;EACrBI,OAAO,CAACC,GAAG,CAAC,0BAA0BL,IAAI,EAAE,CAAC;AAC/C,CAAC,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}